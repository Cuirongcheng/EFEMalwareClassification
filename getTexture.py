import numpy as np
import cv2
from collections import *
from PIL import Image
import os
import pandas as pd
from skimage.feature import greycomatrix, greycoprops

def get_img_glcm(s): # s为图像路径
    values_temp = []
    input = cv2.imread(s, cv2.IMREAD_GRAYSCALE) # 读取图像，灰度模式
    # 得到共生矩阵，参数：图像矩阵，距离，方向，灰度级别，是否对称，是否标准化
    glcm = greycomatrix(input, [2, 8, 16], [0, np.pi / 4, np.pi / 2, np.pi * 3 / 4], 256, symmetric=True, normed=True)  # , np.pi / 4, np.pi / 2, np.pi * 3 / 4
    # print(glcm)
    # a = np.array(glcm).flatten().tolist()
    # print(a)
    # print(len(glcm))
    # print(len(a))
    # print(glcm.shape)
    # 循环计算表征纹理的参数
    for prop in {'contrast', 'dissimilarity','homogeneity', 'energy', 'correlation'}:
        temp = greycoprops(glcm, prop)
        # temp=np.array(temp).reshape(-1)
        values_temp.append(temp)
        # print(prop, temp)
        # print('len:',len(temp))
        # print('')
    # print(values_temp)
    values_temp_list = np.array(values_temp).flatten().tolist()
    print(values_temp_list)
    # print(len(values_temp_list))
    # print(len(values_temp))
    return values_temp_list

# values = []
#
# basepath = "F:\\big2015\\malware-classification\\train_img_asm\\"
# mapglcm = defaultdict(list)
# subtrain = pd.read_csv('trainLabels.csv')
# i = 0
# for sid in subtrain.Id:
#     i += 1
#     print("dealing with {0}th img...".format(str(i)))
#     filename = basepath + sid + ".png"
#     print(filename)
#     im = get_img_glcm(filename)
#     print("maping with {0}th img...".format(str(i)))
#     mapglcm[sid] = im
#
# dataframelist = []
# for sid,imf in mapglcm.items():
#     standard = {}
#     standard["Id"] = sid
#     for index,value in enumerate(imf):
#         standard[index] = value
#     dataframelist.append(standard)
#
# df = pd.DataFrame(dataframelist)
# df.to_csv("Allglcmasmfeature.csv",index=False)


if __name__ == "__main__":
    im = get_img_glcm('D:\WorkSpace\APTWorkSpace\CrcMalwareClassification\KNN_asm.png')